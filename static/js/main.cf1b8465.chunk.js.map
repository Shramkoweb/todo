{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.jsx","components/search-panel/index.js","components/search-panel/search-panel.jsx","components/todo-item/index.js","components/todo-item/todo-item.jsx","components/todo-list/index.js","components/todo-list/todo-list.jsx","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/item-add-form/index.js","components/item-add-form/item-add-form.jsx","components/app/app.js","components/app/index.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","props","onSearchChange","onChange","evt","target","value","type","placeholder","TodoItem","important","label","onDeleteButtonClick","onToggleDone","onToggleImportant","onClick","TodoList","todos","elements","map","item","id","itemProps","key","filters","name","ItemStatusFilter","filter","onFilterChange","filterElements","index","isActive","toLowerCase","classNames","checked","data-toggle","ItemAddForm","state","todoLabel","_submitFormHandler","bind","this","setState","preventDefault","onAddButtonClick","onSubmit","_inputChangeHandler","Button","disabled","PureComponent","mockTodoLabels","App","globaldId","todoData","_createTodoItem","searchPhrase","_deleteTodoHandler","_addTodoHandler","_toggleTodoDoneStateHandler","_toggleTodoImportantStateHandler","_searchInputChange","isImportant","array","propertyName","todoIndex","findIndex","oldItem","newItem","slice","_togglePropertyIn","text","todoTemplate","initialState","indexOf","items","visibleItems","searchTodoByTerm","filterItems","doneTodosAmount","length","todosAmount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf1b8465.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from \"react\";\nimport \"./app-header.css\"\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"todo-app__header d-flex\">\n            <h1 className=\"todo-app__title m-0\">Todo List</h1>\n            <p className=\"todo-app__amount m-0 ml-auto align-self-center\">{toDo} more to do, {done} done</p>\n        </div>\n    );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React from \"react\";\n\nimport \"./search-panel.css\"\n\nconst SearchPanel = (props) => {\n    const {onSearchChange} = props;\n\n    return <input\n        onChange={(evt) => onSearchChange(evt.target.value)}\n        className=\"todo-app__search-input form-control mr-2\"\n        type=\"text\"\n        placeholder=\"search phrase\"\n    />\n};\n\nexport default SearchPanel;\n","import TodoItem from './todo-item';\n\nexport default TodoItem;\n","import React from \"react\";\n\nimport './todo-item.css';\n\nconst TodoItem = (props) => {\n    const {\n        done,\n        important,\n        label,\n        onDeleteButtonClick,\n        onToggleDone,\n        onToggleImportant,\n    } = props;\n\n    const importantClasses = 'font-weight-bold text-info';\n\n    return (\n        <div className=\"d-flex align-items-center\">\n          <span\n              onClick={onToggleDone}\n              className={important ? importantClasses : \"\"}>\n              {\n                  done ?\n                      <del>{label}</del>\n                      :\n                      label\n              }\n          </span>\n            <button\n                onClick={onToggleImportant}\n                type=\"button\"\n                className=\"ml-auto flex-shrink-0 mr-2 todo-app__item-button btn btn-outline-success btn-sm\">\n\n                <i className=\"fa fa-exclamation\"/>\n            </button>\n\n            <button\n                onClick={onDeleteButtonClick}\n                type=\"button\"\n                className=\"flex-shrink-0 todo-app__item-button btn btn-outline-danger btn-sm\">\n                <i className=\"fa fa-trash-o\"/>\n            </button>\n        </div>\n    );\n};\n\nexport default TodoItem;\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoItem from '../todo-item';\nimport './todo-list.css';\n\nconst TodoList = ({todos, onDeleteButtonClick, onToggleDone, onToggleImportant}) => {\n\n    const elements = todos.map((item) => {\n        const {id, ...itemProps} = item;\n\n        return (\n            <li key={id} className=\"list-group-item list-group-item-action\">\n                <TodoItem\n                    {...itemProps}\n                    onDeleteButtonClick={() => onDeleteButtonClick(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                />\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;\n","import React from 'react';\n\nimport './item-status-filter.css';\n\nconst filters = [\n    {name: 'All'},\n    {name: 'Active'},\n    {name: 'Done'}\n];\n\nconst ItemStatusFilter = (props) => {\n    const {filter, onFilterChange} = props;\n\n    const filterElements = filters.map((item, index) => {\n        const isActive = item.name.toLowerCase() === filter;\n        const classNames = `btn btn-secondary ${isActive ? 'active' : ''}`;\n\n        return (\n            <label key={`${index}-label`} className={classNames}>\n                <input\n                    onChange={(evt) => onFilterChange(evt.target.id)}\n                    type=\"radio\"\n                    name=\"options\"\n                    id={item.name.toLowerCase()}\n                    checked={isActive}\n                />\n                {item.name}\n            </label>\n        );\n    });\n\n    return (\n        <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            {filterElements}\n        </div>\n    );\n};\n\nexport default ItemStatusFilter;\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import ItemAddForm from \"./item-add-form\";\n\nexport default ItemAddForm;\n","import React, {PureComponent} from \"react\";\nimport {Button} from \"react-bootstrap\";\n\nclass ItemAddForm extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            todoLabel: ''\n        };\n\n        this._submitFormHandler = this._submitFormHandler.bind(this);\n    }\n\n    _inputChangeHandler(todoLabel) {\n        this.setState((state) => {\n            return {\n                todoLabel: todoLabel\n            };\n        });\n    }\n\n    _submitFormHandler(evt) {\n        evt.preventDefault();\n\n        const {onAddButtonClick} = this.props;\n        const {todoLabel} = this.state;\n\n        onAddButtonClick(todoLabel);\n        this.setState({\n            todoLabel: ''\n        })\n    }\n\n    render() {\n        const {todoLabel} = this.state;\n\n        return (\n            <form\n                onSubmit={this._submitFormHandler}\n                className=\"d-flex mt-2\">\n                <input\n                    value={todoLabel}\n                    onChange={({target: {value}}) => this._inputChangeHandler(value)}\n                    placeholder={\"Add todo's text\"}\n                    className=\"form-control w-auto mr-2 flex-grow-1\"\n                    type=\"text\"/>\n                <Button\n                    disabled={!todoLabel}\n                    type=\"submit\"\n                >\n                    Add\n                </Button>\n            </form>\n        );\n    }\n};\n\nexport default ItemAddForm;\n","import React, {PureComponent} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\n\nimport './app.css';\nimport ItemAddForm from \"../item-add-form\";\n\nconst mockTodoLabels = [\n    'Drink Coffee',\n    'Make Awesome App',\n    'Have a lunch',\n    'Buy a bread',\n];\n\nclass App extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.globaldId = 0;\n\n        this.state = {\n            todoData: mockTodoLabels.map((item, index) => {\n                return this._createTodoItem(item, index % 2)\n            }),\n            searchPhrase: '',\n            filter: 'all',\n        };\n\n        this._deleteTodoHandler = this._deleteTodoHandler.bind(this);\n        this._addTodoHandler = this._addTodoHandler.bind(this);\n        this._toggleTodoDoneStateHandler = this._toggleTodoDoneStateHandler.bind(this);\n        this._toggleTodoImportantStateHandler = this._toggleTodoImportantStateHandler.bind(this);\n        this._searchInputChange = this._searchInputChange.bind(this);\n    }\n\n    _createTodoItem(label, isImportant = false) {\n        return {\n            done: false,\n            id: this.globaldId++,\n            important: isImportant,\n            label,\n        };\n    }\n\n\n    _deleteTodoHandler(id) {\n        this.setState(({todoData}) => {\n            return {\n                todoData: todoData.filter((item) => item.id !== id)\n            }\n        });\n    }\n\n    _togglePropertyIn(array, id, propertyName) {\n        const todoIndex = array.findIndex((item) => item.id === id);\n        const oldItem = array[todoIndex];\n        const newItem = {...oldItem, [propertyName]: !oldItem[propertyName]};\n        return [\n            ...array.slice(0, todoIndex),\n            newItem,\n            ...array.slice(todoIndex + 1)\n        ];\n    }\n\n    _toggleTodoDoneStateHandler(id) {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this._togglePropertyIn(todoData, id, 'done')\n            };\n        });\n    }\n\n    _toggleTodoImportantStateHandler(id) {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this._togglePropertyIn(todoData, id, 'important')\n            };\n        });\n    }\n\n    _addTodoHandler(text) {\n        this.setState(({todoData}) => {\n            const todoTemplate = this._createTodoItem(text, false);\n\n            return {\n                todoData: [\n                    ...todoData,\n                    todoTemplate\n                ]\n            };\n        });\n    }\n\n    _searchInputChange(searchPhrase) {\n        this.setState({searchPhrase});\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({filter});\n    };\n\n    searchTodoByTerm(initialState, searchPhrase) {\n        if (searchPhrase === \"\") {\n            return initialState;\n        }\n\n        return initialState.filter((item) => item.label.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1);\n    }\n\n\n    filterItems(items, filter) {\n        if (filter === 'all') {\n            return items;\n        } else if (filter === 'active') {\n            return items.filter((item) => (!item.done));\n        } else if (filter === 'done') {\n            return items.filter((item) => item.done);\n        }\n    }\n\n    render() {\n        const {todoData, searchPhrase, filter} = this.state;\n        const visibleItems = this.searchTodoByTerm(this.filterItems(todoData, filter), searchPhrase);\n        const doneTodosAmount = todoData.filter((item) => item.done).length;\n        const todosAmount = todoData.length - doneTodosAmount;\n\n        return (\n            <div className=\"todo-app mx-auto mt-4\">\n                <AppHeader toDo={todosAmount} done={doneTodosAmount}/>\n                <div className=\"d-flex mt-2 mb-2\">\n                    <SearchPanel\n                        onSearchChange={this._searchInputChange}\n                    />\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilterChange={this.onFilterChange}\n                    />\n                </div>\n\n                <TodoList\n                    todos={visibleItems}\n                    onDeleteButtonClick={this._deleteTodoHandler}\n                    onToggleDone={this._toggleTodoDoneStateHandler}\n                    onToggleImportant={this._toggleTodoImportantStateHandler}\n                />\n                <ItemAddForm\n                    onAddButtonClick={this._addTodoHandler}\n                />\n            </div>\n        );\n    }\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './components/app';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}